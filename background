#include <stdlib.h>
#include <stdio.h>
#include <SDL/SDL.h>
#include <SDL/SDL_image.h>
#include <SDL/SDL_mixer.h>

#define SPEED 1
#define IMX 2000
#define IMY 480

SDL_Surface* Charger(const char* fic)
{
    SDL_Surface *res;
    SDL_Surface* tmp = SDL_LoadBMP(fic);
    if (tmp==NULL)
    {
        printf("Erreur chargement %s\n",fic);
        exit(-1);
    }
    res = SDL_DisplayFormat(tmp);
    SDL_FreeSurface(tmp);
    return res;
}

int negatmodulo(int x,int mod)
{
    if (x>=0)
        return x%mod;
    return (x%mod)+mod;
}

int main(int argc,char** argv)
{
    SDL_Surface* fond,*screen;
    Uint8* key;
    int x,y;
    x=y=0;
    SDL_Init(SDL_INIT_VIDEO);
    screen=SDL_SetVideoMode(IMX,IMY,32,SDL_SWSURFACE|SDL_DOUBLEBUF);  
    fond=SDL_LoadBMP("background.bmp");
    do
    {
        SDL_Rect R;
        key = SDL_GetKeyState(NULL);
        SDL_PumpEvents();
        if (key[SDLK_LEFT])
            x+=SPEED;
        if (key[SDLK_RIGHT])
            x-=SPEED;
        if (key[SDLK_UP])
            y+=SPEED;
        if (key[SDLK_DOWN])
            y-=SPEED;
        R.x = negatmodulo(x,IMX);
        R.y = negatmodulo(y,IMY);
        SDL_BlitSurface(fond,NULL,screen,&R);
        R.x = negatmodulo(x,IMX) - IMX;
        R.y = negatmodulo(y,IMY);
        SDL_BlitSurface(fond,NULL,screen,&R);
        R.x = negatmodulo(x,IMX) - IMX;
        R.y = negatmodulo(y,IMY) - IMY;
        SDL_BlitSurface(fond,NULL,screen,&R);
        R.x = negatmodulo(x,IMX);
        R.y = negatmodulo(y,IMY) - IMY;
        SDL_BlitSurface(fond,NULL,screen,&R);
        SDL_Flip(screen);
        SDL_Delay(3);
    } 
    while(!key[SDLK_ESCAPE]);
    SDL_FreeSurface(fond);
    SDL_Quit();
    return 0;
}
